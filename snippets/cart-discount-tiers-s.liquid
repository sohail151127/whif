<style>
  .progress-bar-container {
    position: relative;
    height: 8px;
    background-color: #e0e0e0; /* Light gray background */
    border-radius: 4px;
    margin-bottom: 10px;
}

.progress-bar .progress {
    height: 8px;
    background-color: black; /* Black progress bar */
    border-radius: 4px;
}

.milestones {
    display: flex;
    justify-content: space-between;
    margin-top: 10px;
}

.milestone {
    text-align: center;
}

.milestone .lock-icon {
    font-size: 20px;
}

.milestone p {
    font-size: 12px;
    margin-top: 5px;
}

.reward-description {
    display: flex;
    justify-content: space-between;
    margin-top: 20px;
}

.reward-item {
    text-align: left;
    max-width: 200px;
}

.reward-item img {
    width: 100%;
    height: auto;
    border-radius: 8px;
}

.reward-item p {
    font-size: 14px;
    margin-top: 10px;
}

</style>



<div class="cart__discount_tiers-items--wrapper">
    <div class="progress-bar-container">
        <div class="progress-bar">
            <!-- Existing progress logic remains unchanged -->
            <div class="progress" style="width: {{track}}%;"></div>
        </div>

        <!-- Milestones for each discount tier -->
        <div class="milestones">
            {% for i in (0..lastIndex) %}
                {% assign tier = discountTiers[i] | plus: 0 %}
                <div class="milestone">
                    <span class="lock-icon">ðŸ”’</span>
                    <p>Rs{{ tier }}</p>
                    <p>FREE FULL-SIZE ITEM</p>
                </div>
            {% endfor %}
        </div>
    </div>

    <!-- Commenting out existing reward section if not needed right now -->
    {%- comment -%}
    <div class="cart__discount_tiers-progress">
        {% assign track = cartTotal | divided_by: 220.00 | times: 100.00 %}
        {% if cartTotal >= discountTiers[0] and cartTotal < discountTiers[1] %}
            {% assign track = 25 %}
        {% elsif cartTotal >= discountTiers[1] and cartTotal < discountTiers[2] %}
            {% assign track = 50 %}
        {% elsif cartTotal >= discountTiers[2] and cartTotal < discountTiers[3] %}
            {% assign track = 75 %}
        {% elsif cartTotal >= discountTiers[3] %}
            {% assign track = 100 %}
        {% endif %}
        <div class="cart__discount_tiers-progress--track" style="width: {{track}}%;"></div>
    </div>
    {%- endcomment -%}
</div>





<!-- Product Rewards Section -->
<div class="reward-description">
    <div class="reward-item">
        <img src="https://cdn.shopify.com/s/files/1/0792/4518/1246/files/Untitled_design_74_54903c3f-4458-4a06-b481-63cc31cbf0a1.webp?v=1728604875" alt="Balancing Vitamin Cleanser">
        <p>
            <strong>FREE</strong> Balancing Vitamin Cleanser - Valued at $44.99 when you spend Rs. -15,705 more
        </p>
    </div>
    <div class="reward-item">
        <img src="https://cdn.shopify.com/s/files/1/0792/4518/1246/files/Untitled_design_74_54903c3f-4458-4a06-b481-63cc31cbf0a1.webp?v=1728604875" alt="Plump + Glow Bundle">
        <p>
            <strong>FREE</strong> Plump + Glow Bundle - Valued at $134.99 when you spend Rs. -15,640 more
        </p>
    </div>
</div>

<!-- Existing Rewards Logic can be commented out -->
{%- comment -%}
<div class="cart__discount_tiers-items">
    {% for i in (0..lastIndex) %}
        <div class="cart__discount_tiers-item {% if cartTotal >= tier %}_active{% endif %}" data-limit="{{ tier }}">
            <div class="ship-container">
                <span>ðŸ”’</span>
                <span>Spend ${{ tier }}</span>
            </div>
            <div class="check-tick">
                <svg>...</svg>
            </div>
        </div>
    {% endfor %}
</div>
{%- endcomment -%}




<script>
  let cartTotal = {{ cartTotal }};
let tiers = [100, 140, 180, 230]; // Example tiers
let trackWidth = calculateTrackWidth(cartTotal, tiers); // Create a function to calculate this

// Update the width of the progress dynamically
document.querySelector('.progress').style.width = trackWidth + '%';

function calculateTrackWidth(total, tiers) {
    if (total >= tiers[3]) {
        return 100;
    } else if (total >= tiers[2]) {
        return 75;
    } else if (total >= tiers[1]) {
        return 50;
    } else if (total >= tiers[0]) {
        return 25;
    } else {
        return (total / tiers[0]) * 25; // Dynamic calculation for values below the first tier
    }
}

</script>
